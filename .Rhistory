ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(method="histodot")
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(method="histodot")
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(method="histodot")
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(method="histodot",na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(method="histodot",na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(method="histodot",na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(method="histodot",na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(y=GDP,x=Income.Group)) + geom_dotplot(method="histodot",na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(y=GDP,x=IncomeGroup)) + geom_dotplot(method="histodot",na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(y=GDP,x=IncomeGroup)) + geom_dotplot(na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(y=GDP,x=IncomeGroup)) + geom_dotplot(na.rm=TRUE,binwidth = 1/40)
ggplot(mergeddata.small.sorted, aes(y=GDP,x=IncomeGroup)) + geom_dotplot(na.rm=TRUE,binwidth = 1/35)
ggplot(mergeddata.small.sorted, aes(y=GDP,x=IncomeGroup)) + geom_dotplot(na.rm=TRUE,binwidth = 1/30)
ggplot(mergeddata.small.sorted, aes(y=GDP,x=IncomeGroup)) + geom_dotplot(na.rm=TRUE,binwidth = 1/20)
ggplot(mergeddata.small.sorted, aes(y=GDP,x=IncomeGroup)) + geom_dotplot(na.rm=TRUE,binwidth = 1/15)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,binwidth = 1/15)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,binwidth = 10)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,binwidth = 30)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,binwidth = 1/30)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,binwidth = 1/50)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(method="dotdensity"),na.rm=TRUE,binwidth = 1/50)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,dotsize = .1)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,dotsize = 4)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,dotsize = 1)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,dotsize = .9)
ggplot(mergeddata.small.sorted, aes(x=GDP)) + geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center")
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) + geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center")
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center")
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_discrete(breaks=c("0.5","1","2"),
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_discrete(breaks=c("0.5","1","2"),
gplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_discrete(breaks=c("0.5","1","2")
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_discrete(name="GDP", limits(0,1000,10000,100000,100000)
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_discrete(name="GDP", limits(0,1000,10000,100000,100000)
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_discrete(name="GDP", limits=c(0,1000,10000,100000,100000)
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_discrete(name= "GDP", limits=c(0,1000,10000,100000,100000)
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_continuous(name= "GDP", limits=c(0,1000,10000,100000,100000)
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_continuous(name= "GDP", limits=c(0,1000,10000,100000,100000)
mergeddata.small$GDP <- as.numeric(mergeddata.small$GDP)
mergeddata.small$GDP
class(mergeddata.small$GDP)
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_continuous(name= "GDP", limits=c(0,1000,10000,100000,100000))
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_continuous(name= "GDP", limits=c(0,100000))
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_continuous(name= "GDP", limits=c(0,20000000))
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_continuous(name= "GDP", limits=c(0,20000000) breaks=c(100,1000,10000,100000,1000000,10000000))
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_continuous(name= "GDP", limits=c(0,20000000), breaks=c(100,1000,10000,100000,1000000,10000000))
ggplot(mergeddata.small.sorted, aes(x=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_continuous(name= "GDP", limits=c(0,20000000), breaks=c(1000,1000000,15000000))
View(mergeddata)
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center") +
scale_x_continuous(name= "GDP", limits=c(0,20000000), breaks=c(1000,1000000,15000000))
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,fill=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center")
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,color=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,dotsize = .9,stackdir = "center")
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,color=IncomeGroup)) +
geom_dotplot(na.rm=TRUE,stackdir = "center")
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,color=IncomeGroup)) +
geom_dotplot(na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,color=IncomeGroup)) +
geom_dotplot(method=dotdensity,na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,color=IncomeGroup)) +
geom_dotplot(method="dotdensity",na.rm=TRUE)
rankedquantiles <- quantile(mergeddata.small.sorted$Ranking, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1))
rankedquantiles
rankedquantiles <- quantile(mergeddata.small.sorted$Ranking, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1))
rankedquantiles
mergeddata.small.sorted$GroupRank <- quantile(mergeddata.small.sorted$Ranking, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1))
mergeddata.small.sorted$GroupRanking <- cut(mergeddata.small.sorted$Ranking,breaks=5)
incomeAgg
quant <- table(incomeAgg,merge.data.final$Group)
quant <- table(incomeAgg,mergeddata.small.sorted$Group)
sort.list(incomeAgg)
class(incomeAgg)
class(incomeAgg$IncomeGroup)
incomeAgg$IncomeGroup
incomeAgg$IncomeGroup <- as.character(levels(incomeAgg$IncomeGroup))[incomeAgg$IncomeGroup]
incomeAgg$IncomeGroup
quant <- table(incomeAgg$IncomeGroup ,mergeddata.small.sorted$Group)
incomeAgg$IncomeGroup
mergeddata.small.sorted$Group
incomeAgg <- aggregate(mergeddata.small.sorted, by=list(mergeddata.small.sorted$IncomeGroup), FUN=mean, na.rm=TRUE)
incomeAgg <- incomeAgg[c("Group.1","Ranking","GDP")]
incomeAgg <- rename(incomeAgg, c("Group.1"="IncomeGroup","GDP"="MeanGDP","Ranking"="MeanRanking"))
incomeAgg <- incomeAgg[with(incomeAgg,order(MeanRanking)),]
str(incomeAgg)
head(mergeddata.small.sorted)
incomeAgg <- aggregate(mergeddata.small.sorted, by=list(mergeddata.small.sorted$IncomeGroup), FUN=mean, na.rm=TRUE)
incomeAgg <- incomeAgg[c("Group.1","Ranking","GDP")]
incomeAgg <- rename(incomeAgg, c("Group.1"="IncomeGroup","GDP"="MeanGDP","Ranking"="MeanRanking"))
incomeAgg <- incomeAgg[with(incomeAgg,order(MeanRanking)),]
str(incomeAgg)
head(mergeddata.small.sorted)
incomeAgg <- aggregate(mergeddata.small.sorted, by=list(mergeddata.small.sorted$IncomeGroup), FUN=mean, na.rm=TRUE)
incomeAgg <- incomeAgg[c("Group.1","Ranking","GDP")]
incomeAgg <- rename(incomeAgg, c("Group.1"="IncomeGroup","GDP"="MeanGDP","Ranking"="MeanRanking"))
incomeAgg <- incomeAgg[with(incomeAgg,order(MeanRanking)),]
str(incomeAgg)
head(mergeddata.small.sorted)
incomeAgg
quant.table<-table(merge.data.final$Income.Group, merge.data.final$Group)
quant.table<-table(merge.data.final$Income.Group, rankedquantiles)
rankedquantiles <- cut(merge.data.final$Ranking,breaks=5)
rankedquantiles <- cut(mergeddata.small.sorted,breaks=5)
rankedquantiles <- cut(mergeddata.small.sorted$Ranking,breaks=5)
rankedquantiles
quant.table<-table(merge.data.final$Income.Group, rankedquantiles)
incomeAgg$MeanRanking
incomeAgg$IncomeGroup
quant.table<-table(incomeAgg$IncomeGroup, rankedquantiles)
quant.table<-table(incomeAgg$IncomeGroup, rankedquantiles[,x])
quant <- table(mergeddata.small.sorted$IncomeGroup,mergeddata.small.sorted$Group)
quant
ggplot(mergeddata.small.sorted, aes(x=ranking, y=GDP,color=IncomeGroup)) +
geom_bar())
ggplot(mergeddata.small.sorted, aes(x=ranking, y=GDP,color=IncomeGroup)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(x=Ranking, y=GDP,color=IncomeGroup)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(x=Ranking, fill=IncomeGroup)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(x=GDP, fill=IncomeGroup)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(x=GDP, fill=IncomeGroup)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup,y=GDP, fill=IncomeGroup)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup,y=GDP, fill=IncomeGroup)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup,y=GDP)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(y=GDP)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(y=IncomeGroup)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(y=Income.Group)) +
geom_bar()
ggplot(mergeddata.small.sorted, aes(y=IncomeGroup)) +
geom_bar()
#Load Libraries
library(downloader)
#Download GDP Data
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url,destfile="FEDSTATS_Country.raw.csv")
#Download EDU Data
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url,destfile="FGDP.raw.csv")
getwd()
url
#Load Libraries
library(downloader)
#Download GDP Data
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url,destfile="Data//FEDSTATS_Country.raw.csv")
#Download EDU Data
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url,destfile="Data//FGDP.raw.csv")
source("Data//gather.r")
#Download File
source("Data//gather.r")
#Tidy
source("Data//tidy.r")
#Download File
source("Data//Gather.r")
#Tidy
source("Data//Tidy&Merge.r")
source("Analyze//Analyze.r")
source("Data//Gather.r")
#Tidy
source("Data//Tidy&Merge.r")
#Tidy
source("Data//Tidy&Merge.r")
#Download File
source("Data//Tidy&Merge.r")
GDP <- read.csv(FGDP.raw.csv)
GDP <- read.csv("FGDP.raw.csv")
GDP <- read.csv("FGDP.raw.csv")
GDP <- read.csv("FGDP.raw.csv")
GDP <- read.csv("//FGDP.raw.csv")
GDP <- read.csv("Data//FGDP.raw.csv")
#remove header and footer at the bottom of page
GDP.NHF<- GDP[5:235,]
#Update column names
GDP.NHF.CN <-rename(GDP.NHF, c("X"="CountryCode","Gross.domestic.product.2012" ="Ranking"
,"X.2"="Country","X.3"="GDP","X.4" = "Category"))
#Replace empty strings with NA
GDP.NHF.CN[GDP.NHF.CN==""] <- NA
#Keep only the columns we need
GDP.NHF.CN.DC <- GDP.NHF.CN[c("CountryCode","Ranking","Country","GDP","Category")]
#remove rows that do not have rankings
GDP.Final <- GDP.NHF.CN.DC[!(is.na(GDP.NHF.CN.DC$Ranking)), ]
#Load Edstats data
edstats <- read.csv(EDFile)
#Replace empty string with NA
edstats[edstats == ""] <- NA
#Merge Data
mergeddata <- merge( GDP.Final, edstats,by="CountryCode")
#Only keep the columns we need
mergeddata.small <- mergeddata[c("CountryCode","Ranking","GDP","Long.Name","Income.Group")]
#rename long.name and Income.Group to keep consistent
mergeddata.small <-rename(mergeddata.small, c("Long.Name"="LongName","Income.Group"="IncomeGroup"))
#Convert ranking from factor to numeric
mergeddata.small$Ranking <- as.numeric(levels(mergeddata.small$Ranking))[mergeddata.small$Ranking]
#Convert LongName from factor to char
mergeddata.small$Long.Name <- as.character(levels(mergeddata.small$Long.Name))[mergeddata.small$Long.Name]
#Remove commas from GDP
mergeddata.small$GDP <-gsub(",", "", mergeddata.small$GDP)
#Convert GDP from factor to numeric
mergeddata.small$GDP <- as.numeric(mergeddata.small$GDP)
#Convert LongName from factor to char
mergeddata.small$Long.Name <- as.character(levels(mergeddata.small$LongName))[mergeddata.small$Long.Name]
str(mergeddata.small)
mergeddata.small$LongName <- as.character(levels(mergeddata.small$LongName))[mergeddata.small$Long.Name]
mergeddata.small <-rename(mergeddata.small, c("Long.Name"="LongName","Income.Group"="IncomeGroup"))
edstats <- read.csv(EDFile)
#Replace empty string with NA
edstats[edstats == ""] <- NA
#Merge Data
mergeddata <- merge( GDP.Final, edstats,by="CountryCode")
#Only keep the columns we need
mergeddata.small <- mergeddata[c("CountryCode","Ranking","GDP","Long.Name","Income.Group")]
#rename long.name and Income.Group to keep consistent
mergeddata.small <-rename(mergeddata.small, c("Long.Name"="LongName","Income.Group"="IncomeGroup"))
#Convert ranking from factor to numeric
mergeddata.small$Ranking <- as.numeric(levels(mergeddata.small$Ranking))[mergeddata.small$Ranking]
#Convert LongName from factor to char
mergeddata.small$LongName <- as.character(levels(mergeddata.small$LongName))[mergeddata.small$Long.Name]
mergeddata.small$LongName <- as.character(levels(mergeddata.small$LongName))[mergeddata.small$LongName]
#Remove commas from GDP
mergeddata.small$GDP <-gsub(",", "", mergeddata.small$GDP)
#Convert GDP from factor to numeric
mergeddata.small$GDP <- as.numeric(mergeddata.small$GDP)
GDPFile <- "Data//FGDP.raw.csv"
EDFile <- "Data//FEDSTATS_Country.raw.csv"
#load data from CSV files
GDP <- read.csv(GDPFile)
#remove header and footer at the bottom of page
GDP.NHF<- GDP[5:235,]
#Update column names
GDP.NHF.CN <-rename(GDP.NHF, c("X"="CountryCode","Gross.domestic.product.2012" ="Ranking"
,"X.2"="Country","X.3"="GDP","X.4" = "Category"))
#Replace empty strings with NA
GDP.NHF.CN[GDP.NHF.CN==""] <- NA
#Keep only the columns we need
GDP.NHF.CN.DC <- GDP.NHF.CN[c("CountryCode","Ranking","Country","GDP","Category")]
#remove rows that do not have rankings
GDP.Final <- GDP.NHF.CN.DC[!(is.na(GDP.NHF.CN.DC$Ranking)), ]
#Load Edstats data
edstats <- read.csv(EDFile)
#Replace empty string with NA
edstats[edstats == ""] <- NA
#Merge Data
mergeddata <- merge( GDP.Final, edstats,by="CountryCode")
#Only keep the columns we need
mergeddata.small <- mergeddata[c("CountryCode","Ranking","GDP","Long.Name","Income.Group")]
#rename long.name and Income.Group to keep consistent
mergeddata.small <-rename(mergeddata.small, c("Long.Name"="LongName","Income.Group"="IncomeGroup"))
#Convert ranking from factor to numeric
mergeddata.small$Ranking <- as.numeric(levels(mergeddata.small$Ranking))[mergeddata.small$Ranking]
#Convert LongName from factor to char
mergeddata.small$LongName <- as.character(levels(mergeddata.small$LongName))[mergeddata.small$LongName]
#Remove commas from GDP
mergeddata.small$GDP <-gsub(",", "", mergeddata.small$GDP)
#Convert GDP from factor to numeric
mergeddata.small$GDP <- as.numeric(mergeddata.small$GDP)
#Question 1
length(mergeddata$CountryCode)
#Quesion 2
mergeddata.small.sorted <- mergeddata.small[with(mergeddata.small,order(-Ranking)),]
#Question 3
incomeAgg <- aggregate(mergeddata.small.sorted, by=list(mergeddata.small.sorted$IncomeGroup), FUN=mean, na.rm=TRUE)
incomeAgg <- incomeAgg[c("Group.1","Ranking","GDP")]
incomeAgg <- rename(incomeAgg, c("Group.1"="IncomeGroup","GDP"="MeanGDP","Ranking"="MeanRanking"))
incomeAgg <- incomeAgg[with(incomeAgg,order(MeanRanking)),]
str(incomeAgg)
head(mergeddata.small.sorted)
#Question 4
str(mergeddata.small.sorted)
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,color=IncomeGroup)) +
geom_dotplot(method="dotdensity",na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(y=IncomeGroup)) +
geom_bar()
scale_x_continuous(name= "GDP", limits=c(0,20000000), breaks=c(1000,1000000,15000000))
mergeddata.small.sorted$GDP
#Question 5
mergeddata.small.sorted$GroupRanking <- cut(mergeddata.small.sorted$Ranking,breaks=5)
merge.data.final$Group <- cut(merge.data.final$Ranking,breaks=5)
class(incomeAgg$IncomeGroup)
incomeAgg$IncomeGroup <- as.character(levels(incomeAgg$IncomeGroup))[incomeAgg$IncomeGroup]
incomeAgg$IncomeGroup
rankedquantiles <- as.numeric(as.character(merge.data.final$Ranking))
rankedquantiles <- cut(mergeddata.small.sorted$Ranking,breaks=5)
quant <- table(mergeddata.small.sorted$IncomeGroup,mergeddata.small.sorted$Group)
source("Data//Tidy&Merge.r")
source("Data//Tidy&Merge.r")
source("Data//Tidy&Merge.r")
GDPFile <- "Data//FGDP.raw.csv"
EDFile <- "Data//FEDSTATS_Country.raw.csv"
#load data from CSV files
GDP <- read.csv(GDPFile)
#remove header and footer at the bottom of page
GDP.NHF<- GDP[5:235,]
#Update column names
GDP.NHF.CN <-rename(GDP.NHF, c("X"="CountryCode","Gross.domestic.product.2012" ="Ranking"
,"X.2"="Country","X.3"="GDP","X.4" = "Category"))
#Replace empty strings with NA
GDP.NHF.CN[GDP.NHF.CN==""] <- NA
#Keep only the columns we need
GDP.NHF.CN.DC <- GDP.NHF.CN[c("CountryCode","Ranking","Country","GDP","Category")]
#remove rows that do not have rankings
GDP.Final <- GDP.NHF.CN.DC[!(is.na(GDP.NHF.CN.DC$Ranking)), ]
#Load Edstats data
edstats <- read.csv(EDFile)
#Replace empty string with NA
edstats[edstats == ""] <- NA
#Merge Data
mergeddata <- merge( GDP.Final, edstats,by="CountryCode")
#Only keep the columns we need
mergeddata.small <- mergeddata[c("CountryCode","Ranking","GDP","Long.Name","Income.Group")]
#rename long.name and Income.Group to keep consistent
mergeddata.small <-rename(mergeddata.small, c("Long.Name"="LongName","Income.Group"="IncomeGroup"))
#Convert ranking from factor to numeric
mergeddata.small$Ranking <- as.numeric(levels(mergeddata.small$Ranking))[mergeddata.small$Ranking]
#Convert LongName from factor to char
mergeddata.small$LongName <- as.character(levels(mergeddata.small$LongName))[mergeddata.small$LongName]
#Remove commas from GDP
mergeddata.small$GDP <-gsub(",", "", mergeddata.small$GDP)
#Convert GDP from factor to numeric
mergeddata.small$GDP <- as.numeric(mergeddata.small$GDP)
#Download File
source("Data//Gather.r")
#Tidy
source("Data//Tidy&Merge.r")
source("Analyze//Analyze.r")
#Download File
source("Data//Gather.r")
#Tidy
source("Data//Tidy&Merge.r")
source("Analyze//Analyze.r")
download.file(url,destfile="Data//FGDP.raw.csv") #download file and save it to Data directory
#Load Libraries
library(downloader)
#Download GDP Data
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url,destfile="Data//FEDSTATS_Country.raw.csv") #download file and save it to Data directory
#Download Educ Data
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url,destfile="Data//FGDP.raw.csv") #download file and save it to Data directory
#Download File
source("Data//Gather.r")
#Tidy
source("Data//Tidy&Merge.r")
source("Analyze//Analyze.r")
rankedquantiles <- cut(mergeddata.small.sorted$Ranking,breaks=5)
quant <- table(incomeAgg$IncomeGroup,mergeddata.small.sorted$Group)
mergeddata.small.sorted
incomeAgg$IncomeGroup
rankedquantiles <- as.numeric(as.character(merge.data.final$Ranking))
rankedquantiles
nkedquantiles <- cut(mergeddata.small.sorted$Ranking,breaks=5)
quant <- table(incomeAgg$IncomeGroup,rankedquantiles)
quant <- table(incomeAgg,rankedquantiles)
rankedquantiles
quant <- table(incomeAgg$IncomeGroup,rankedquantiles)
rankedquantiles <- cut(mergeddata.small.sorted$Ranking,breaks=5)
quant <- table(incomeAgg$MeanRanking,rankedquantiles)
quant <- table(incomeAgg,rankedquantiles)
class(incomeAgg$IncomeGroup)
incomeAgg$IncomeGroup <- as.character(levels(incomeAgg$IncomeGroup))[incomeAgg$IncomeGroup]
quant <- table(incomeAgg,rankedquantiles)
quant <- table(incomeAgg$IncomeGroup,rankedquantiles)
incomeAgg$IncomeGroup <- as.character(levels(incomeAgg$IncomeGroup))[incomeAgg$IncomeGroup]
incomeAgg
rankedquantiles
quant <- table(mergeddata.small.sorted$IncomeGroup,rankedquantiles)
quant
#Download File
source("Data//Gather.r")
#Tidy
source("Data//Tidy&Merge.r")
source("Analyze//Analyze.r")
#Question 1
length(mergeddata$CountryCode)
#Quesion 2
mergeddata.small.sorted <- mergeddata.small[with(mergeddata.small,order(-Ranking)),]
#Question 3
incomeAgg <- aggregate(mergeddata.small.sorted, by=list(mergeddata.small.sorted$IncomeGroup), FUN=mean, na.rm=TRUE)
incomeAgg <- incomeAgg[c("Group.1","Ranking","GDP")]
incomeAgg <- rename(incomeAgg, c("Group.1"="IncomeGroup","GDP"="MeanGDP","Ranking"="MeanRanking"))
incomeAgg <- incomeAgg[with(incomeAgg,order(MeanRanking)),]
str(incomeAgg)
head(mergeddata.small.sorted)
#Question 4
str(mergeddata.small.sorted)
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,color=IncomeGroup)) +
geom_dotplot(method="dotdensity",na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(y=IncomeGroup)) +
geom_bar()
scale_x_continuous(name= "GDP", limits=c(0,20000000), breaks=c(1000,1000000,15000000))
mergeddata.small.sorted$GDP
#Question 5
rankedquantiles <- cut(mergeddata.small.sorted$Ranking,breaks=5)
quant <- table(mergeddata.small.sorted$IncomeGroup,rankedquantiles)
quant
#Question 1
length(mergeddata$CountryCode)
#Quesion 2
mergeddata.small.sorted <- mergeddata.small[with(mergeddata.small,order(-Ranking)),]
#Question 3
incomeAgg <- aggregate(mergeddata.small.sorted, by=list(mergeddata.small.sorted$IncomeGroup), FUN=mean, na.rm=TRUE)
incomeAgg <- incomeAgg[c("Group.1","Ranking","GDP")]
incomeAgg <- rename(incomeAgg, c("Group.1"="IncomeGroup","GDP"="MeanGDP","Ranking"="MeanRanking"))
incomeAgg <- incomeAgg[with(incomeAgg,order(MeanRanking)),]
str(incomeAgg)
head(mergeddata.small.sorted)
#Question 4
str(mergeddata.small.sorted)
ggplot(mergeddata.small.sorted, aes(x=IncomeGroup, y=GDP,color=IncomeGroup)) +
geom_dotplot(method="dotdensity",na.rm=TRUE)
ggplot(mergeddata.small.sorted, aes(y=IncomeGroup)) +
geom_bar()
scale_x_continuous(name= "GDP", limits=c(0,20000000), breaks=c(1000,1000000,15000000))
mergeddata.small.sorted$GDP
#Question 5
rankedquantiles <- cut(mergeddata.small.sorted$Ranking,breaks=5)
quant <- table(mergeddata.small.sorted$IncomeGroup,rankedquantiles)
quant
#Download File
source("Data//Gather.r")
#Tidy
source("Data//Tidy&Merge.r")
source("Analyze//Analyze.r")
#Download File
source("Data//Gather.r")
#Tidy
source("Data//Tidy&Merge.r")
source("Analyze//Analyze.r")
```
GDPFile <- "Data//FGDP.raw.csv"
library(reshape)
library(plyr)
# ---- test-a ----
library(plyr)
GDPFile <- "FGDP.raw.csv"
EDFile <- "FEDSTATS_Country.raw.csv"
#load data from CSV files
GDP <- read.csv(GDPFile)
#remove header and footer at the bottom of page
GDP.NHF<- GDP[5:235,]
#Update column names
GDP.NHF.CN <-rename(GDP.NHF, c("X"="CountryCode","Gross.domestic.product.2012" ="Ranking"
,"X.2"="Country","X.3"="GDP","X.4" = "Category"))
#Replace empty strings with NA
GDP.NHF.CN[GDP.NHF.CN==""] <- NA
#Keep only the columns we need
GDP.NHF.CN.DC <- GDP.NHF.CN[c("CountryCode","Ranking","Country","GDP","Category")]
#remove rows that do not have rankings
GDP.Final <- GDP.NHF.CN.DC[!(is.na(GDP.NHF.CN.DC$Ranking)), ]
#Load Edstats data
edstats <- read.csv(EDFile)
#Replace empty string with NA
edstats[edstats == ""] <- NA
#Merge Data
mergeddata <- merge( GDP.Final, edstats,by="CountryCode")
#Only keep the columns we need
mergeddata.small <- mergeddata[c("CountryCode","Ranking","GDP","Long.Name","Income.Group")]
#rename long.name and Income.Group to keep consistent
mergeddata.small <-rename(mergeddata.small, c("Long.Name"="LongName","Income.Group"="IncomeGroup"))
#Convert ranking from factor to numeric
mergeddata.small$Ranking <- as.numeric(levels(mergeddata.small$Ranking))[mergeddata.small$Ranking]
#Convert LongName from factor to char
mergeddata.small$LongName <- as.character(levels(mergeddata.small$LongName))[mergeddata.small$LongName]
#Remove commas from GDP
mergeddata.small$GDP <-gsub(",", "", mergeddata.small$GDP)
#Convert GDP from factor to numeric
mergeddata.small$GDP <- as.numeric(mergeddata.small$GDP)
print("End Tidy")
mergeddata.small$GDP <- as.numeric(mergeddata.small$GDP)
install.packages("rtimes")
library("rtimes")
